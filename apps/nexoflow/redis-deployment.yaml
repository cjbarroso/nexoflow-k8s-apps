apiVersion: v1
kind: Service
metadata:
  # The name of the Service. This will be used for DNS discovery within the cluster.
  name: redis
  # Deploy this Service to the 'nexoflow' namespace.
  namespace: nexoflow
  labels:
    app: redis
spec:
  ports:
    # The port that the Service will expose.
    - port: 6379
      # The port on the Pod that the Service will forward traffic to.
      targetPort: 6379
  selector:
    # This selector ensures the Service routes traffic to Pods with the 'app: redis' label.
    app: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  # The name of the StatefulSet.
  name: redis
  # Deploy this StatefulSet to the 'nexoflow' namespace.
  namespace: nexoflow
spec:
  # This specifies the Service that governs this StatefulSet.
  serviceName: "redis"
  # Deploy a single replica of the Redis pod.
  replicas: 1
  selector:
    matchLabels:
      # The labels that the StatefulSet's Pods will have.
      app: redis
  template:
    metadata:
      labels:
        # Ensure the Pods have the 'app: redis' label to be selected by the Service.
        app: redis
    spec:
      containers:
        # The container running Redis.
        - name: redis
          # The official Redis image from Docker Hub.
          image: redis:7.2-alpine
          ports:
            # The port that the container will listen on.
            - containerPort: 6379
          # A simple readiness probe to check if the Redis server is ready to accept connections.
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 10
          # A simple liveness probe to check if the Redis server is still running.
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 15
            periodSeconds: 20
